language: cpp

matrix:
  include:
    - os: linux
      compiler: gcc
      env: CXX=g++-4.8 CC=gcc-4.8 EIGEN_VERSION=3.1.0 EIGEN_HASH=ca142d0540d3 MSGPACK_C_VERSION="1.4.2"
      dist: trusty
      sudo: required
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - boost-latest
          packages:
            - wget
            - automake
            - libtool
            - mpich2
            - gcc-4.8
            - g++-4.8
            - libboost1.54-all-dev
            - libzmq3-dev
            - libgflags-dev
            - libgoogle-glog-dev

    - os: osx
      compiler: clang
      env: EIGEN_VERSION=3.1.0 EIGEN_HASH=ca142d0540d3 MSGPACK_C_VERSION="1.4.2"

before_install:
  - if [[ $TRAVIS_OS_NAME == "linux" ]]; then
      sudo add-apt-repository -y ppa:andykimpe/cmake;
      sudo apt-get install -yqq cmake;
    fi
  - if [[ $TRAVIS_OS_NAME == "osx" ]]; then
      brew update 2>&1 > /tmp/brew-update.txt || (cat /tmp/brew-update.txt && false);
      brew uninstall libtool && brew install libtool;
      brew install gnu-sed;
      brew install open-mpi;
      brew install boost;
      brew install zmq;
      brew install gflags;
      brew install glog;
    fi

install:
  - cd /tmp
  - wget -O "/tmp/msgpack-c-${MSGPACK_C_VERSION}.tar.gz"
    "https://github.com/msgpack/msgpack-c/archive/cpp-${MSGPACK_C_VERSION}.tar.gz"
  - tar -zxvf "/tmp/msgpack-c-${MSGPACK_C_VERSION}.tar.gz" "msgpack-c-cpp-${MSGPACK_C_VERSION}"
  - cd "/tmp/msgpack-c-cpp-${MSGPACK_C_VERSION}"
  - ./bootstrap
  - ./configure
  - make
  - sudo make install
  - cd /tmp && rm -rf /tmp/msgpack-c*
  - wget -O "$EIGEN_VERSION.tar.gz" "http://bitbucket.org/eigen/eigen/get/${EIGEN_VERSION}.tar.gz"
  - tar -zxvf "$EIGEN_VERSION.tar.gz" "eigen-eigen-${EIGEN_HASH}"
  - mkdir -p "/tmp/eigen-eigen-${EIGEN_HASH}/build"
  - cd "/tmp/eigen-eigen-${EIGEN_HASH}/build"
  - cmake ..
  - make
  - sudo make install
  - cd /tmp && rm -rf /tmp/eigen*

before_script:
  - cd $TRAVIS_BUILD_DIR
  - mkdir build
  - sudo mkdir -p "/opt/paracel"
  - cd build
  - cmake -DCMAKE_INSTALL_PREFIX=/opt/paracel ..

after_failure:
  - "cat /home/travis/build/douban/paracel/build/CMakeFiles/CMakeError.log"

script:
  - if [[ $TRAVIS_OS_NAME == "linux" ]]; then make -j$(nproc); fi
  - if [[ $TRAVIS_OS_NAME == "osx" ]]; then make -j$(sysctl -n hw.ncpu); fi
  - make test
  - sudo make install
  - cd /tmp
  - wget "paracel.io/data/kjv12.txt" -O "data.txt"
  - if [[ $TRAVIS_OS_NAME == "osx" ]]; then
      wget "paracel.io/data/travis_demo_osx.json";
      export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:/opt/paracel/lib;
      /opt/paracel/prun.py -p 2 -w 2 -c travis_demo_osx.json -m local /opt/paracel/bin/wc;
    fi
  - if [[ $TRAVIS_OS_NAME == "linux" ]]; then
      wget "paracel.io/data/travis_demo.json";
      export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/paracel/lib;
      /opt/paracel/prun.py -p 2 -w 2 -c travis_demo.json -m local /opt/paracel/bin/wc;
    fi

branches:
  except:
    - legacy
